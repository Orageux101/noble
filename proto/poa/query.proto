syntax = "proto3";
package noble.poa;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/strangelove-ventures/noble/x/poa/types";

service Query {
  rpc Validator(QueryValidatorRequest) returns (QueryValidatorResponse) {
    option (google.api.http).get = "/noble/poa/validator";
  }
  rpc Validators(QueryValidatorsRequest) returns (QueryValidatorsResponse) {
    option (google.api.http).get = "/noble/poa/validator";
  }
  rpc Vote(QueryVoteRequest) returns (QueryVoteResponse) {
    option (google.api.http).get = "/noble/poa/vote";
  }
  rpc Votes(QueryVotesRequest) returns (QueryVotesResponse) {
    option (google.api.http).get = "/noble/poa/vote";
  }
}

message QueryValidatorRequest {
  string validator_address = 1;
}

message QueryValidatorResponse {
  string validator_address = 1;
  bool is_accepted = 2;
}

message QueryValidatorsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryValidatorsResponse {
  repeated QueryValidatorResponse validators = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryVoteRequest {
  string candidate_address = 1;
  string voter_address = 2;
}
  
message QueryVoteResponse {
  string candidate_address = 1;
  string voter_address = 2;
  bool in_favor = 3;
}

message QueryVotesRequest {
  string candidate_address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
  
message QueryVotesResponse {
  repeated QueryVoteResponse votes = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
