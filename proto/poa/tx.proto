syntax = "proto3";
package noble.poa;

import "cosmos/staking/v1beta1/staking.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/strangelove-ventures/noble/x/poa/types";

service Msg {
  rpc CreateValidator(MsgCreateValidator) returns (MsgCreateValidatorResponse);
  rpc VoteValidator(MsgVoteValidator) returns (MsgVoteValidatorResponse);
}

message MsgCreateValidator {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // string name = 1 [(gogoproto.moretags) = "yaml:\"name\""];
  cosmos.staking.v1beta1.Description description = 1 [(gogoproto.nullable) = false];
  string owner_address = 2 [(gogoproto.moretags) = "yaml:\"owner_address\""];
  string validator_address = 3 [(gogoproto.moretags) = "yaml:\"validator_address\""];
  google.protobuf.Any pubkey = 4 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
}

message MsgCreateValidatorResponse {
}

message MsgVoteValidator {
  // string name = 1 [(gogoproto.moretags) = "yaml:\"name\""];
  string voter_address = 1 [(gogoproto.moretags) = "yaml:\"voter_address\""];
  bool in_favor = 2 [(gogoproto.moretags) = "yaml:\"infavor\""];
  string owner_address = 3 [(gogoproto.moretags) = "yaml:\"owner_address\""];
}

message MsgVoteValidatorResponse {
}
